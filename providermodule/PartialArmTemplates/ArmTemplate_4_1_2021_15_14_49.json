{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "providermodule"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Load_Language_Codes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Language_Codes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Language_Codes",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Language_Codes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_PlanCodes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load_planCode",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Load_PlanCodes",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Load_PlanCodes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_ProductCodes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load_ProductCodes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LoadProductCodes",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/LoadProductCodes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PROVIDER_ATL_IDENTIFIER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PRO_ATL_IDENTIFIER",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PRO_ALT_IDENT",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PRO_ALT_IDENT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SRC_P3_Module",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_Provider_2.csv",
						"container": "providermodel"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PROVIDER_ID",
						"type": "String"
					},
					{
						"name": "CMS_Provider_ID",
						"type": "String"
					},
					{
						"name": "UPIN",
						"type": "String"
					},
					{
						"name": "NPI",
						"type": "String"
					},
					{
						"name": "TIN",
						"type": "String"
					},
					{
						"name": "TIMELY_FILING_LIMIT",
						"type": "String"
					},
					{
						"name": "FIRST_NAME",
						"type": "String"
					},
					{
						"name": "MIDDLE_NAME",
						"type": "String"
					},
					{
						"name": "LAST_NAME",
						"type": "String"
					},
					{
						"name": "PROVIDER_NAME_PREFIX",
						"type": "String"
					},
					{
						"name": "PROVIDER_NAME_SUFIX",
						"type": "String"
					},
					{
						"name": "PROVIDER_TITLE",
						"type": "String"
					},
					{
						"name": "PHYSICAL_ADDRESS1",
						"type": "String"
					},
					{
						"name": "PHYSICAL_ADDRESS2",
						"type": "String"
					},
					{
						"name": "PHYSICAL_CITY",
						"type": "String"
					},
					{
						"name": "PHYSICAL_STATE",
						"type": "String"
					},
					{
						"name": "PHYSICAL_ZIP",
						"type": "String"
					},
					{
						"name": "PHONE",
						"type": "String"
					},
					{
						"name": "FAX",
						"type": "String"
					},
					{
						"name": "EXCLUDEFROMMRCHASE",
						"type": "String"
					},
					{
						"name": "EXCLUDEFROMPRRELATIONSHIP",
						"type": "String"
					},
					{
						"name": "DEA_NUMBER",
						"type": "String"
					},
					{
						"name": "LANGUAGE",
						"type": "String"
					},
					{
						"name": "Client_Provider_ID",
						"type": "String"
					},
					{
						"name": "Company_Name",
						"type": "String"
					},
					{
						"name": "Email_Address",
						"type": "String"
					},
					{
						"name": "Email_Usage_Type_Code",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "Phone_Number_2",
						"type": "String"
					},
					{
						"name": "Phone_Number_3",
						"type": "String"
					},
					{
						"name": "Fax_Number_2",
						"type": "String"
					},
					{
						"name": "Fax_Number_3",
						"type": "String"
					},
					{
						"name": "Client_Location_ID",
						"type": "String"
					},
					{
						"name": "Location_Name",
						"type": "String"
					},
					{
						"name": "Location_Usage_Type_Code",
						"type": "String"
					},
					{
						"name": "Location_Contact_Full_Name",
						"type": "String"
					},
					{
						"name": "Location_Contact_First_Name",
						"type": "String"
					},
					{
						"name": "Location_Contact_Last_Name",
						"type": "String"
					},
					{
						"name": "SSN",
						"type": "String"
					},
					{
						"name": "Network_Ind",
						"type": "String"
					},
					{
						"name": "Facility_Code",
						"type": "String"
					},
					{
						"name": "Management_Group_Code",
						"type": "String"
					},
					{
						"name": "Location_Key",
						"type": "String"
					},
					{
						"name": "Source_System_Of_Record",
						"type": "String"
					},
					{
						"name": "Medicare_Facility_Number",
						"type": "String"
					},
					{
						"name": "Provider_Location_Effective_Date",
						"type": "String"
					},
					{
						"name": "Provider_Location_Termination_Date",
						"type": "String"
					},
					{
						"name": "Usage_Preference_Code",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SRC_P3_Module",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_SpecialityTaxonomyCodes.csv",
						"container": "providermodel"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Speciality_KEY",
						"type": "String"
					},
					{
						"name": "CMS SPECIALTY CODE",
						"type": "String"
					},
					{
						"name": "CMS SPECIALTY DESCRIPTION",
						"type": "String"
					},
					{
						"name": "PROVIDER TAXONOMY CODE",
						"type": "String"
					},
					{
						"name": "PROVIDER TAXONOMY DESCRIPTION TYPE",
						"type": "String"
					},
					{
						"name": "PROVIDER TAXONOMY DESCRIPTION CLASSIFICATION and SPECIALIZATION",
						"type": "String"
					},
					{
						"name": "RBI DATA SPECIALITY CODE",
						"type": "String"
					},
					{
						"name": "PROVIDER TYPE",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SRC_P3_Module",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_PlanCodes.xlsx",
						"container": "providermodel"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "PlanCode",
						"type": "String"
					},
					{
						"name": "PlanDescription",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SInk_ProductCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Product_Code",
						"type": "varchar"
					},
					{
						"name": "Product_Code_Description",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "REF_ProductCodes"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_Language_Codes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SRC_P3_Module",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_LanguageCodes_non_dupli.xlsx",
						"container": "providermodel"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ISO 639-2 Code",
						"type": "String"
					},
					{
						"name": "English name of Language",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_ProductCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SRC_P3_Module",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Product Codes",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SRC_Product Codes_updated.xlsx",
						"container": "providermodel"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "PRODUCT CODE",
						"type": "String"
					},
					{
						"name": "DESCRIPTION",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkLanguageCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Language_Code",
						"type": "varchar"
					},
					{
						"name": "Language_Name",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "REF_LanguageCodes"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_PlanCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Plan_Code",
						"type": "varchar"
					},
					{
						"name": "Plan_Code_description",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "REF_PlanCodes"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_Pro_alt_identifier')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Provider_Alternate_Identifier",
						"type": "varchar"
					},
					{
						"name": "Provider_ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Provider_Alternate_Identifier"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Language_Codes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_Language_Codes",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SinkLanguageCodes",
								"type": "DatasetReference"
							},
							"name": "SinkLanguagecodes"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\t{ISO 639-2 Code} as string,\n\t\t{English name of Language} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 sink(input(\n\t\tLanguage_Code as string,\n\t\tLanguage_Name as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tLanguage_Code = {ISO 639-2 Code},\n\t\tLanguage_Name = {English name of Language}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> SinkLanguagecodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRC_Language_Codes')]",
				"[concat(variables('factoryId'), '/datasets/SinkLanguageCodes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadProductCodes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRC_ProductCodes",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SInk_ProductCodes",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\t{PRODUCT CODE} as string,\n\t\tDESCRIPTION as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 sink(input(\n\t\tProduct_Code as string,\n\t\tProduct_Code_Description as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tProduct_Code = {PRODUCT CODE},\n\t\tProduct_Code_Description = DESCRIPTION\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRC_ProductCodes')]",
				"[concat(variables('factoryId'), '/datasets/SInk_ProductCodes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_PlanCodes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Excel1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Sink_PlanCodes",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tPlanCode as string,\n\t\tPlanDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 sink(input(\n\t\tPlan_Code as string,\n\t\tPlan_Code_description as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tPlan_Code = PlanCode,\n\t\tPlan_Code_description = PlanDescription\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Excel1')]",
				"[concat(variables('factoryId'), '/datasets/Sink_PlanCodes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRO_ALT_IDENT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Sink_Pro_alt_identifier",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tPROVIDER_ID as string,\n\t\tCMS_Provider_ID as string,\n\t\tUPIN as string,\n\t\tNPI as string,\n\t\tTIN as string,\n\t\tTIMELY_FILING_LIMIT as string,\n\t\tFIRST_NAME as string,\n\t\tMIDDLE_NAME as string,\n\t\tLAST_NAME as string,\n\t\tPROVIDER_NAME_PREFIX as string,\n\t\tPROVIDER_NAME_SUFIX as string,\n\t\tPROVIDER_TITLE as string,\n\t\tPHYSICAL_ADDRESS1 as string,\n\t\tPHYSICAL_ADDRESS2 as string,\n\t\tPHYSICAL_CITY as string,\n\t\tPHYSICAL_STATE as string,\n\t\tPHYSICAL_ZIP as string,\n\t\tPHONE as string,\n\t\tFAX as string,\n\t\tEXCLUDEFROMMRCHASE as string,\n\t\tEXCLUDEFROMPRRELATIONSHIP as string,\n\t\tDEA_NUMBER as string,\n\t\tLANGUAGE as string,\n\t\tClient_Provider_ID as string,\n\t\tCompany_Name as string,\n\t\tEmail_Address as string,\n\t\tEmail_Usage_Type_Code as string,\n\t\tCounty as string,\n\t\tPhone_Number_2 as string,\n\t\tPhone_Number_3 as string,\n\t\tFax_Number_2 as string,\n\t\tFax_Number_3 as string,\n\t\tClient_Location_ID as string,\n\t\tLocation_Name as string,\n\t\tLocation_Usage_Type_Code as string,\n\t\tLocation_Contact_Full_Name as string,\n\t\tLocation_Contact_First_Name as string,\n\t\tLocation_Contact_Last_Name as string,\n\t\tSSN as string,\n\t\tNetwork_Ind as string,\n\t\tFacility_Code as string,\n\t\tManagement_Group_Code as string,\n\t\tLocation_Key as string,\n\t\tSource_System_Of_Record as string,\n\t\tMedicare_Facility_Number as string,\n\t\tProvider_Location_Effective_Date as string,\n\t\tProvider_Location_Termination_Date as string,\n\t\tUsage_Preference_Code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 derive(PROVIDER_ALTERNATE_IDENTIFIER = PROVIDER_ID + TIN) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\tPROVIDER_ID,\n\t\tPROVIDER_ALTERNATE_IDENTIFIER\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(input(\n\t\tProvider_Alternate_Identifier as string,\n\t\tProvider_ID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tProvider_Alternate_Identifier = PROVIDER_ALTERNATE_IDENTIFIER,\n\t\tProvider_ID = PROVIDER_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/Sink_Pro_alt_identifier')]"
			]
		}
	]
}