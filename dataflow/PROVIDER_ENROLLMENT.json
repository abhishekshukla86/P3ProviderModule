{
	"name": "PROVIDER_ENROLLMENT",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SRC_PROVIDER_ENROLLMENT",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Sink_Provider_Enrollment",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Lookup1"
				}
			],
			"script": "source(output(\n\t\tPROVIDERKEY as string,\n\t\tPROVIDEREFFECTIVEDATE as string,\n\t\tPROVIDERTERMINATIONDATE as string,\n\t\tPAYERCODE as string,\n\t\tPRODUCTCODE as string,\n\t\tPLANCODE as string,\n\t\tBOARDCERTIFICATION as string,\n\t\tNETWORKFLAG as string,\n\t\tPROVIDERPANELCODE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\tProvider_Alternate_Identifier as string,\n\t\tProvider_ID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source2\nsource1, source2 lookup(PROVIDERKEY == Provider_Alternate_Identifier,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nLookup1 sink(input(\n\t\tProvider_Enrolment_Id as integer,\n\t\tProvider_KEY as string,\n\t\tProvider_Effective_Date as date,\n\t\tProvider_Termination_Date as date,\n\t\tProvider_Product_Code as string,\n\t\tProvider_PayerCode as string,\n\t\tBoard_Certification as string,\n\t\tNetwork_Flag as string,\n\t\tProvider_PanelCode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tProvider_KEY = PROVIDERKEY,\n\t\tProvider_Effective_Date = PROVIDEREFFECTIVEDATE,\n\t\tProvider_Termination_Date = PROVIDERTERMINATIONDATE,\n\t\tProvider_Product_Code = PRODUCTCODE,\n\t\tProvider_PayerCode = PAYERCODE,\n\t\tBoard_Certification = BOARDCERTIFICATION,\n\t\tNetwork_Flag = NETWORKFLAG,\n\t\tProvider_PanelCode = PROVIDERPANELCODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
		}
	}
}